{"version":3,"file":"utils.esm.js","sources":["../src/constants.ts","../src/index.ts"],"sourcesContent":["export const MARROW_ID_NAME = 'data-marrow-id'\nexport const OUTER_ID = 'outer'","import { MARROW_ID_NAME, OUTER_ID } from './constants'\n\nimport { Marrow, MarrowContainer, StartStyle, TransformType, TransformAllType } from '@marrow/global'\nimport React from 'react'\n\nexport {\n  MARROW_ID_NAME,\n  OUTER_ID\n}\n\n// 根据位置获取处于当前位置上的所有marrow的id\nexport function getMarrowIdsByLocation(x: number, y: number): string[] {\n  const elements = document.elementsFromPoint(x, y)\n  return elements.reduce((total: string[], item) => {\n    if (isElementButNotBodyOrHtml(item) && item.style.opacity !== '0') {\n      const narrowId = item.getAttribute(MARROW_ID_NAME)\n      if (narrowId) {\n        total.push(narrowId)\n      }\n    }\n\n    return total\n  }, [])\n}\n\n// 判断当前element是不是body以内的元素\nexport function isElementButNotBodyOrHtml(element: Element): element is HTMLElement {\n  return !!element.tagName && !['BODY', 'HTML'].includes(element.tagName)\n}\n\n// 遍历marrow\nexport function eachMarrow(data: Marrow[], fn: (marrow: Marrow) => boolean | void) {\n  const stack: Marrow[] = [...data]\n  let item = stack.pop()\n  while (item) {\n    if (fn(item)) break\n\n    if (item?.type === 'container' && item.children) {\n      stack.push(...item.children)\n    }\n    item = stack.pop()\n  }\n}\n\n// 遍历marrow只暴露有孩子的节点\nexport function eachMarrowByHasChildren(data: Marrow[], fn: (marrow: Marrow, index: number, parent?: Marrow) => boolean | void) {\n  const hasChildrenStack: Marrow[] = []\n  for (let i = 0; i < data.length; i++) {\n    if (fn(data[i], i)) return\n\n    if (hasChildren(data[i])) {\n      hasChildrenStack.push(data[i])\n    }\n  }\n\n  while (hasChildrenStack.length > 0) {\n    const item = hasChildrenStack.pop()\n    if (item?.type !== 'container' || !item.children) continue\n\n    for (let i = 0; i < item.children.length; i++) {\n      if (fn(item.children[i], i, item)) return\n\n      if (hasChildren(item.children[i])) {\n        hasChildrenStack.push(item.children[i])\n      }\n    }\n  }\n}\n\n// 根据id获取当前的marrow\nexport function getMarrowById(data: Marrow[], id: string): Marrow | undefined {\n  let res: Marrow | undefined = undefined\n\n  eachMarrow(data, (marrow: Marrow) => {\n    if (marrow.id === id) {\n      res = marrow\n      return true\n    }\n  })\n\n  return res\n}\n\n// 根据ids获取所有的marrow\nexport function getMarrowsByIds(data: Marrow[], ids: string[]): Marrow[] {\n  const res: Marrow[] = []\n\n  if (ids.length === 0) {\n    return res\n  }\n\n  eachMarrow(data, (marrow: Marrow) => {\n    if (ids.includes(marrow.id)) {\n      res.push(marrow)\n      if (res.length === ids.length) return true\n    }\n  })\n\n  return res\n}\n\n// 获取所有可以包含children的容器\nexport function getAllIncludeChildren(data: Marrow[]): Marrow[] {\n  const res: Marrow[] = [\n    {\n      id: OUTER_ID,\n      name: '最外层容器',\n      type: 'container',\n      elementName: '容器',\n    }\n  ]\n\n  eachMarrow(data, (marrow: Marrow) => {\n    if (['container'].includes(marrow.type)) {\n      res.push(marrow)\n    }\n  })\n\n  return res\n}\n\nexport function getCurrentMarrowParentId(data: Marrow[], curMarrowId: string): string {\n  let parentId = ''\n  eachMarrowByHasChildren(data, (item, i, parent) => {\n    if (item.id === curMarrowId) {\n      if (parent) {\n        parentId = parent.id\n      } else {\n        parentId = OUTER_ID\n      }\n      return true\n    }\n  })\n\n  return parentId\n}\n\n// 替换当前id的marrow\nexport function replaceMarrow(data: Marrow[], id: string, newMarrow?: Marrow): boolean {\n  const replaceMarrow: Marrow[] = []\n  if (newMarrow) {\n    replaceMarrow.push(newMarrow)\n  }\n\n  let flag = false\n  eachMarrowByHasChildren(data, (item, i, parent) => {\n    if (item.id === id) {\n      if (parent) {\n        (parent as MarrowContainer).children?.splice(i, 1, ...replaceMarrow)\n      } else {\n        data.splice(i, 1, ...replaceMarrow)\n      }\n      flag = true\n      return true\n    }\n  })\n\n  return flag\n}\n\n// 插入节点\nexport function appendChildren(marrow: Marrow, willAppendMarrow: Marrow): boolean {\n  if (marrow.type !== 'container') return false\n\n  marrow.children = [...(marrow.children || []), willAppendMarrow]\n\n  return true\n}\n\n// 获取当前marrow的name\nexport function getMarrowName(marrow: Marrow): string {\n  return marrow.name || `${marrow.elementName}-${marrow.id}`\n}\n\n// 获取最大的zIndex\nexport function getMaxZIndex(data: Marrow[]): number {\n  let zIndex = 0\n  eachMarrow(data, (marrow) => {\n    if (marrow.startStyle?.zIndex && marrow.startStyle.zIndex > zIndex) {\n      zIndex = marrow.startStyle.zIndex as number\n    }\n  })\n\n  return zIndex\n}\n\n// 获取最小的zIndex\nexport function getMinZIndex(data: Marrow[]): number {\n  let zIndex = -1\n  eachMarrow(data, (marrow) => {\n    if (marrow.startStyle?.zIndex && marrow.startStyle.zIndex < zIndex) {\n      zIndex = marrow.startStyle.zIndex as number\n    }\n  })\n\n  return zIndex\n}\n\n// 根据path修改值\nexport function changeObjectByPath<T extends Record<string, any>>(object: T, path: (string | number)[], value: any): T {\n  if (path.length === 1) {\n    return { ...object, [path[0]]: value }\n  }\n\n  let parent: any\n  let cur: any = object\n  path.forEach((key, index) => {\n    if (index === path.length - 1) {\n      parent[path[path.length - 2]] = { ...cur, [key]: value }\n    } else {\n      const curType = Object.prototype.toString.call(cur)\n      if (curType === '[object Object]') {\n        cur = { ...cur }\n      } else if (curType === '[object Array]') {\n        cur = [...cur]\n      } else {\n        return object\n      }\n\n      if (index === 0) {\n        object = cur\n      } else {\n        parent[path[index - 1]] = cur\n      }\n      \n      parent = cur\n      cur = cur[key]\n    }\n  })\n\n  return object\n}\n\n// 去掉单位(最后面的非数字)\nexport function replaceUnit(str: string): string {\n  return str.replace(/[^\\d]*$/, '')\n}\n\n// 合并transform\nexport function mergeTransform(style?: StartStyle): React.CSSProperties | undefined {\n  // 'translateX' | 'translateY' | 'translateZ' | 'scaleX' | 'scaleY' | 'rotateX' | 'rotateY' | 'rotateZ'\n  if (!style || style.transform) {\n    return style\n  }\n\n  const copyStyle = { ...style }\n  const updateMap: Record<TransformType, [TransformAllType, number]> = {\n    translateX: ['translate', 0],\n    translateY: ['translate', 1],\n    translateZ: ['translate', 2],\n    scaleX: ['scale', 0],\n    scaleY: ['scale', 1],\n    rotateX: ['rotate', 0],\n    rotateY: ['rotate', 1],\n    rotateZ: ['rotate', 2]\n  }\n  const transform: Record<TransformAllType, (number | string)[]> = {\n    translate: [0, 0, 0],\n    scale: [1, 1, 1],\n    rotate: [0, 0, 0]\n  }\n\n  for (const _key in updateMap) {\n    const key = _key as TransformType\n    if (copyStyle[key]) {\n      const [type, index] = updateMap[key]\n      transform[type][index] = copyStyle[key] || transform[type][index]\n      delete copyStyle[key]\n    }\n  }\n\n  let transformStr = ''\n  for (const _key in transform) {\n    const key = _key as TransformAllType\n    transformStr += `${key}X(${transform[key][0]}) ${key}Y(${transform[key][1]}) ${key}Z(${transform[key][2]}) `\n  }\n\n  copyStyle.transform = transformStr\n\n  return copyStyle\n}\n\n// 生成style字符串\nexport function createStyle(style?: StartStyle): string {\n  if (!style) return ''\n\n  const _style = mergeTransform(style)\n  const styleArr: string[] = []\n  for (const key in _style) {\n    styleArr.push(`${upperToMiddleLine(key)}: ${(_style as any)[key]}`)\n  }\n\n  return styleArr.join(';')\n}\n\n// 将驼峰转中划线\nexport function upperToMiddleLine(str: string): string {\n  return str.replace(/([A-Z])/g, '-$1').toLowerCase()\n}\n\n// 阻止冒泡\nexport function stopPropagation(e: React.MouseEvent, handle?: (e: React.MouseEvent) => void) {\n  handle?.(e)\n  e.stopPropagation()\n  return false\n}\n\n// 判断是否有children\nexport function hasChildren(marrow: Marrow): boolean {\n  return marrow.type === 'container' && !!marrow.children\n}\n\n// 生成随机ID\nexport function generateId(): string {\n  return `${new Date().getTime()}-${Math.floor(Math.random() * 100000000)}`\n}\n\n// 获取最外层容器\nexport function getBuildContainer(): HTMLElement {\n  return document.querySelector('.marrow-build-wrapper') as HTMLElement\n}\n"],"names":["MARROW_ID_NAME","OUTER_ID","getMarrowIdsByLocation","x","y","elements","document","elementsFromPoint","reduce","total","item","isElementButNotBodyOrHtml","style","opacity","narrowId","getAttribute","push","element","tagName","includes","eachMarrow","data","fn","stack","pop","type","children","eachMarrowByHasChildren","hasChildrenStack","i","length","hasChildren","getMarrowById","id","res","undefined","marrow","getMarrowsByIds","ids","getAllIncludeChildren","name","elementName","getCurrentMarrowParentId","curMarrowId","parentId","parent","replaceMarrow","newMarrow","flag","_a","splice","appendChildren","willAppendMarrow","getMarrowName","getMaxZIndex","zIndex","startStyle","getMinZIndex","changeObjectByPath","object","path","value","Object","assign","cur","forEach","key","index","curType","prototype","toString","call","replaceUnit","str","replace","mergeTransform","transform","copyStyle","updateMap","translateX","translateY","translateZ","scaleX","scaleY","rotateX","rotateY","rotateZ","translate","scale","rotate","_key","transformStr","createStyle","_style","styleArr","upperToMiddleLine","join","toLowerCase","stopPropagation","e","handle","generateId","Date","getTime","Math","floor","random","getBuildContainer","querySelector"],"mappings":"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"}